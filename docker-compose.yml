version: '3.8'

services:
  ftp-server:
    image: delfer/alpine-ftp-server
    container_name: ftp-server
    ports:
      - "21:21"                  
      - "21000-21010:21000-21010" 
    environment:
      USERS: "testuser|Complex$Password123456789!|/home/testuser"
      ADDRESS: "localhost"
      PASV_MIN_PORT: "0"
      PASV_MAX_PORT: "0"
    volumes:
      - ./ftp-data:/home/testuser 
    restart: always 

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE_KAFKA:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INSIDE_KAFKA://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE_KAFKA://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE_KAFKA
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"  # EXTERNAL listener
      - "9093:9093"  # INSIDE_KAFKA listener
    depends_on:
      - zookeeper
    networks:
      - kafka-net

  mqtt:
    image: eclipse-mosquitto:latest
    container_name: mqtt-broker
    ports:
      - "1883:1883"  # MQTT protocol
      - "8883:8883"
    command: ["usr/sbin/mosquitto", "-c", "/mosquitto-no-auth.conf"]
    restart: always

  graphql-server:
    image: hasura/graphql-engine:v2.0.10
    container_name: graphql-server
    ports:
      - "8080:8080"  # Expose the GraphQL server port
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "sqlite:hasura.db" # Use SQLite database
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: "myadminsecretkey"
      HASURA_GRAPHQL_MIGRATIONS_DIR: "/hasura-migrations" # Specify the migrations directory
    restart: always

networks:
  kafka-net:
    driver: bridge
